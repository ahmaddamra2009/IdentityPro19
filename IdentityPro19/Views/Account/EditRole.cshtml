@model EditRoleViewModel

@{
    ViewData["Title"] = "EditRole";
}

<p>Edit Role</p>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditRole" method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RoleId" class="control-label"></label>
                <input asp-for="RoleId" readonly class="form-control" />
                <span asp-validation-for="RoleId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RoleName" class="control-label"></label>
                <input asp-for="RoleName" class="form-control" />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
                <a asp-action="RolesList">Cancel</a>
            </div>
        </form>
    </div>
</div>
<h2>
    Users in this role

</h2>

<div class="card">

    <div class="card card-header"> Users in this role</div>
    <div class="card card-body">

        <ul>
            @foreach (var user in Model.Names)
            {
                <li>@user</li>
            }
        </ul>
    </div>
    <div class="card card-footer">
        <a asp-action="AddUserToRole" class="btn btn-primary" asp-route-id="@Model.RoleId">
            Add/Remove user from this role
        </a>
    </div>
</div>





@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
